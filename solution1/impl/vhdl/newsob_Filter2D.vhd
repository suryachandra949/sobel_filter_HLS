-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.4
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity newsob_Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_rows_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_cols_V_read : IN STD_LOGIC_VECTOR (11 downto 0);
    p_src_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_stream_V_empty_n : IN STD_LOGIC;
    p_src_data_stream_V_read : OUT STD_LOGIC;
    p_dst_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_stream_V_full_n : IN STD_LOGIC;
    p_dst_data_stream_V_write : OUT STD_LOGIC );
end;


architecture behav of newsob_Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_pp0_stg0_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st16_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3FFE : STD_LOGIC_VECTOR (13 downto 0) := "11111111111110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_1FFE : STD_LOGIC_VECTOR (12 downto 0) := "1111111111110";
    constant ap_const_lv13_1FFD : STD_LOGIC_VECTOR (12 downto 0) := "1111111111101";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_25 : BOOLEAN;
    signal p_027_0_i_reg_272 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast_fu_283_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rows_cast_reg_1283 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_fu_287_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cols_cast_reg_1294 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_60 : BOOLEAN;
    signal heightloop_fu_297_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal heightloop_reg_1380 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_phi_fu_254_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal widthloop_fu_302_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal widthloop_reg_1385 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_neg391_i_cast_fu_310_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_neg391_i_cast_reg_1390 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_anchor_2_1_cast_fu_324_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_anchor_2_1_cast_reg_1397 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_1_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_344_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_reg_1409 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_9_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_reg_1416 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_366_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_reg_1421 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_3_fu_372_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_reg_1426 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_V_fu_387_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_1434 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_91 : BOOLEAN;
    signal tmp_11_fu_393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_fu_398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ult_reg_1443 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1448 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_reg_1453 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_1_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_1_reg_1457 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_2_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_2_reg_1461 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_reg_1465 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_reg_1472 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_reg_1477 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i423_i_fu_474_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i423_i_reg_1482 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_reg_1487 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_1_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_1_reg_1492 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i423_i_1_fu_522_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i423_i_1_reg_1497 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_33_reg_1502 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_2_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_137_2_reg_1507 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i423_i_2_fu_570_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i423_i_2_reg_1512 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_47_fu_585_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_47_reg_1517 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_fu_589_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_49_reg_1522 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_53_fu_593_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_53_reg_1527 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_fu_599_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_55_reg_1532 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_603_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_reg_1537 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_fu_607_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_reg_1542 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_fu_613_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_59_reg_1547 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_fu_617_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_60_reg_1552 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_fu_621_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_61_reg_1557 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge1_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_reg_1562 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_154 : BOOLEAN;
    signal tmp_19_fu_674_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_reg_1567 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_fu_681_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_37_reg_1572 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge2_fu_687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_reg_1577 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_692_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_43_reg_1582 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_699_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_reg_1587 : STD_LOGIC_VECTOR (1 downto 0);
    signal brmerge3_fu_705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_reg_1592 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_710_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_48_reg_1597 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_54_fu_717_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_54_reg_1602 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev_reg_1607 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_182 : BOOLEAN;
    signal row_assign_9_fu_733_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_9_reg_1612 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_9_1_t_fu_743_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_9_1_t_reg_1617 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_9_2_t_fu_753_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_assign_9_2_t_reg_1622 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_20_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_198 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_20_reg_1627_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_227 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal or_cond_i_reg_1658 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_245 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppstg_tmp_20_reg_1627_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_1627_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_1627_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_20_reg_1627_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_V_fu_767_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ImagLoc_x_fu_789_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ImagLoc_x_reg_1636 : STD_LOGIC_VECTOR (12 downto 0);
    signal rev4_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev4_reg_1641 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_reg_1646 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_fu_828_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_p2_i_i_reg_1652 : STD_LOGIC_VECTOR (12 downto 0);
    signal or_cond_i_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_reg_1658_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i_i_fu_841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_p2_i_i_cast_fu_861_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_p2_i_i_cast_reg_1666 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_28_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1671 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_873_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp_reg_1676 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp7_fu_881_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1681 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_1686 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1686_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_brmerge_reg_1686_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_895_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal x_reg_1693 : STD_LOGIC_VECTOR (13 downto 0);
    signal col_assign_2_t_fu_905_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_2_t_reg_1698 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_reg_ppstg_col_assign_2_t_reg_1698_pp0_it3 : STD_LOGIC_VECTOR (1 downto 0);
    signal k_buf_0_val_3_addr_reg_1705 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_addr_reg_1711 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_k_buf_0_val_4_addr_reg_1711_pp0_it4 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_addr_reg_1717 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_ppstg_k_buf_0_val_5_addr_reg_1717_pp0_it4 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_load_reg_1723 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_fu_949_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_0_0_reg_1728 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_load_reg_1736 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_fu_967_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_1_0_reg_1741 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_fu_985_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal col_buf_0_val_2_0_reg_1749 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_reg_1757 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_fu_1036_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_0_reg_1763 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_fu_1050_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_0_reg_1769 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1769_pp0_it6 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_fu_1064_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_0_reg_1775 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp25_fu_1135_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp25_reg_1781 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp27_fu_1141_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp27_reg_1786 : STD_LOGIC_VECTOR (9 downto 0);
    signal isneg_fu_1208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isneg_reg_1791 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_4_fu_1216_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_4_reg_1796 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_i_i_fu_1230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_i_reg_1801 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_i_i_i_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_i_i_i_reg_1807 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1258_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1812 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_3_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce0 : STD_LOGIC;
    signal k_buf_0_val_3_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_3_ce1 : STD_LOGIC;
    signal k_buf_0_val_3_we1 : STD_LOGIC;
    signal k_buf_0_val_3_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_4_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce0 : STD_LOGIC;
    signal k_buf_0_val_4_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_4_ce1 : STD_LOGIC;
    signal k_buf_0_val_4_we1 : STD_LOGIC;
    signal k_buf_0_val_4_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce0 : STD_LOGIC;
    signal k_buf_0_val_5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_buf_0_val_5_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_buf_0_val_5_ce1 : STD_LOGIC;
    signal k_buf_0_val_5_we1 : STD_LOGIC;
    signal k_buf_0_val_5_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_250 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_014_0_i_reg_261 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_420 : BOOLEAN;
    signal tmp_29_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal src_kernel_win_0_val_0_1_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_0_1_1_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_1_1_1_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_kernel_win_0_val_2_1_1_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_0_1_1_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_1_1_1_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal right_border_buf_0_val_2_1_1_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_307_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal not_tmp_s_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_333_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_149_cast_fu_340_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_fu_355_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_cast_fu_362_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_14_fu_316_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_cast_fu_378_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_18_fu_403_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_15_fu_441_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_fu_460_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_fu_468_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_6_1_fu_489_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_30_fu_508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_1_fu_516_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_assign_6_2_fu_537_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_38_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_7_2_fu_564_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_24_fu_482_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_485_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_530_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_fu_533_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_39_fu_578_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_42_fu_581_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal rev1_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev3_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i422_i_fu_632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i422_i_1_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_1_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_i422_i_2_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_147_2_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_728_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_fu_738_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_50_fu_748_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_cast_fu_758_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_62_fu_773_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_63_fu_795_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_814_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_assign_1_fu_822_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp1_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_mux_fu_850_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal brmerge9_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ImagLoc_x_cast_mux_cast_fu_857_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_assign_2_fu_868_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp8_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_901_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal col_assign_cast_fu_910_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_938_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_956_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_974_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_1028_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_fu_1042_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_51_fu_1056_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_155_0_2_cast_fu_1083_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal OP1_V_0_cast_fu_1079_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_5_0_2_fu_1086_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_1096_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_1104_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_fu_1108_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal OP1_V_2_cast_fu_1118_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Val2_2_fu_1122_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_155_2_cast_fu_1128_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_155_1_cast_fu_1114_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_155_2_2_cast_cast_fu_1132_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_5_0_2_cast_cast_fu_1092_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_1_2_fu_1183_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_155_1_cast_38_fu_1190_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp27_cast_fu_1194_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp26_fu_1197_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Val2_3_fu_1203_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_52_fu_1220_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal overflow_fu_1242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_1253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux_i_i_cast_fu_1246_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_bdd_1131 : BOOLEAN;
    signal ap_sig_bdd_1133 : BOOLEAN;
    signal ap_sig_bdd_1130 : BOOLEAN;
    signal ap_sig_bdd_1136 : BOOLEAN;

    component newsob_mux_3to1_sel2_8_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component newsob_Filter2D_k_buf_0_val_3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    k_buf_0_val_3_U : component newsob_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_3_address0,
        ce0 => k_buf_0_val_3_ce0,
        q0 => k_buf_0_val_3_q0,
        address1 => k_buf_0_val_3_address1,
        ce1 => k_buf_0_val_3_ce1,
        we1 => k_buf_0_val_3_we1,
        d1 => k_buf_0_val_3_d1);

    k_buf_0_val_4_U : component newsob_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_4_address0,
        ce0 => k_buf_0_val_4_ce0,
        q0 => k_buf_0_val_4_q0,
        address1 => k_buf_0_val_4_address1,
        ce1 => k_buf_0_val_4_ce1,
        we1 => k_buf_0_val_4_we1,
        d1 => k_buf_0_val_4_d1);

    k_buf_0_val_5_U : component newsob_Filter2D_k_buf_0_val_3
    generic map (
        DataWidth => 8,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => k_buf_0_val_5_address0,
        ce0 => k_buf_0_val_5_ce0,
        q0 => k_buf_0_val_5_q0,
        address1 => k_buf_0_val_5_address1,
        ce1 => k_buf_0_val_5_ce1,
        we1 => k_buf_0_val_5_we1,
        d1 => k_buf_0_val_5_d1);

    newsob_mux_3to1_sel2_8_1_U14 : component newsob_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_0_1_fu_158,
        din2 => right_border_buf_0_val_0_1_1_fu_162,
        din3 => ap_const_lv8_0,
        din4 => ap_reg_ppstg_col_assign_2_t_reg_1698_pp0_it3,
        dout => tmp_34_fu_938_p5);

    newsob_mux_3to1_sel2_8_1_U15 : component newsob_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_1_1_fu_170,
        din2 => right_border_buf_0_val_1_1_1_fu_174,
        din3 => ap_const_lv8_0,
        din4 => ap_reg_ppstg_col_assign_2_t_reg_1698_pp0_it3,
        dout => tmp_35_fu_956_p5);

    newsob_mux_3to1_sel2_8_1_U16 : component newsob_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => right_border_buf_0_val_2_1_1_fu_178,
        din2 => right_border_buf_0_val_2_1_fu_166,
        din3 => ap_const_lv8_0,
        din4 => ap_reg_ppstg_col_assign_2_t_reg_1698_pp0_it3,
        dout => tmp_36_fu_974_p5);

    newsob_mux_3to1_sel2_8_1_U17 : component newsob_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1728,
        din2 => col_buf_0_val_1_0_reg_1741,
        din3 => col_buf_0_val_2_0_reg_1749,
        din4 => row_assign_9_reg_1612,
        dout => tmp_41_fu_1028_p5);

    newsob_mux_3to1_sel2_8_1_U18 : component newsob_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1728,
        din2 => col_buf_0_val_1_0_reg_1741,
        din3 => col_buf_0_val_2_0_reg_1749,
        din4 => row_assign_9_1_t_reg_1617,
        dout => tmp_46_fu_1042_p5);

    newsob_mux_3to1_sel2_8_1_U19 : component newsob_mux_3to1_sel2_8_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din1 => col_buf_0_val_0_0_reg_1728,
        din2 => col_buf_0_val_1_0_reg_1741,
        din3 => col_buf_0_val_2_0_reg_1749,
        din4 => row_assign_9_2_t_reg_1622,
        dout => tmp_51_fu_1056_p5);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and (ap_const_lv1_0 = tmp_20_fu_762_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3))) then 
                        ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) then 
                        ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                    ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_014_0_i_reg_261 assign process. --
    p_014_0_i_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_6)) then 
                p_014_0_i_reg_261 <= i_V_reg_1434;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_6_phi_fu_254_p4 = ap_const_lv1_0))) then 
                p_014_0_i_reg_261 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- p_027_0_i_reg_272 assign process. --
    p_027_0_i_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_20_fu_762_p2)))) then 
                p_027_0_i_reg_272 <= j_V_fu_767_p2;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
                p_027_0_i_reg_272 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- tmp_6_reg_250 assign process. --
    tmp_6_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then 
                tmp_6_reg_250 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((tmp_6_phi_fu_254_p4 = ap_const_lv1_0)))) then 
                tmp_6_reg_250 <= tmp_7_fu_291_p2;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_20_fu_762_p2)))) then
                ImagLoc_x_reg_1636 <= ImagLoc_x_fu_789_p2;
                or_cond_i_reg_1658 <= or_cond_i_fu_836_p2;
                p_p2_i_i_reg_1652 <= p_p2_i_i_fu_828_p3;
                rev4_reg_1641 <= rev4_fu_803_p2;
                tmp_25_reg_1646 <= tmp_25_fu_809_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) then
                ap_reg_ppstg_brmerge_reg_1686_pp0_it2 <= brmerge_reg_1686;
                ap_reg_ppstg_brmerge_reg_1686_pp0_it3 <= ap_reg_ppstg_brmerge_reg_1686_pp0_it2;
                ap_reg_ppstg_col_assign_2_t_reg_1698_pp0_it3 <= col_assign_2_t_reg_1698;
                ap_reg_ppstg_k_buf_0_val_4_addr_reg_1711_pp0_it4 <= k_buf_0_val_4_addr_reg_1711;
                ap_reg_ppstg_k_buf_0_val_5_addr_reg_1717_pp0_it4 <= k_buf_0_val_5_addr_reg_1717;
                ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it2 <= or_cond_i_i_reg_1662;
                ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3 <= ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it2;
                ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4 <= ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it2 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it1;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it3 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it2;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it4 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it3;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it5 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it4;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it6 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it5;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it7 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it6;
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it8 <= ap_reg_ppstg_or_cond_i_reg_1658_pp0_it7;
                ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1769_pp0_it6 <= src_kernel_win_0_val_1_0_reg_1769;
                ap_reg_ppstg_tmp_20_reg_1627_pp0_it2 <= ap_reg_ppstg_tmp_20_reg_1627_pp0_it1;
                ap_reg_ppstg_tmp_20_reg_1627_pp0_it3 <= ap_reg_ppstg_tmp_20_reg_1627_pp0_it2;
                ap_reg_ppstg_tmp_20_reg_1627_pp0_it4 <= ap_reg_ppstg_tmp_20_reg_1627_pp0_it3;
                ap_reg_ppstg_tmp_20_reg_1627_pp0_it5 <= ap_reg_ppstg_tmp_20_reg_1627_pp0_it4;
                src_kernel_win_0_val_0_0_reg_1763 <= src_kernel_win_0_val_0_0_fu_1036_p3;
                src_kernel_win_0_val_1_0_reg_1769 <= src_kernel_win_0_val_1_0_fu_1050_p3;
                src_kernel_win_0_val_2_0_reg_1775 <= src_kernel_win_0_val_2_0_fu_1064_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                ap_reg_ppstg_or_cond_i_reg_1658_pp0_it1 <= or_cond_i_reg_1658;
                ap_reg_ppstg_tmp_20_reg_1627_pp0_it1 <= tmp_20_reg_1627;
                tmp_20_reg_1627 <= tmp_20_fu_762_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_13_reg_1465)))) then
                brmerge1_reg_1562 <= brmerge1_fu_669_p2;
                brmerge2_reg_1577 <= brmerge2_fu_687_p2;
                brmerge3_reg_1592 <= brmerge3_fu_705_p2;
                tmp_19_reg_1567 <= tmp_19_fu_674_p3;
                tmp_37_reg_1572 <= tmp_37_fu_681_p3;
                tmp_43_reg_1582 <= tmp_43_fu_692_p3;
                tmp_44_reg_1587 <= tmp_44_fu_699_p3;
                tmp_48_reg_1597 <= tmp_48_fu_710_p3;
                tmp_54_reg_1602 <= tmp_54_fu_717_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_20_reg_1627)))) then
                brmerge_reg_1686 <= brmerge_fu_887_p2;
                or_cond_i_i_reg_1662 <= or_cond_i_i_fu_841_p2;
                p_p2_i_i_cast_reg_1666 <= p_p2_i_i_cast_fu_861_p1;
                sel_tmp7_reg_1681 <= sel_tmp7_fu_881_p2;
                sel_tmp_reg_1676 <= sel_tmp_fu_873_p3;
                tmp_28_reg_1671 <= tmp_28_fu_864_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it1)))) then
                col_assign_2_t_reg_1698 <= col_assign_2_t_fu_905_p2;
                x_reg_1693 <= x_fu_895_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                col_buf_0_val_0_0_reg_1728 <= col_buf_0_val_0_0_fu_949_p3;
                col_buf_0_val_1_0_reg_1741 <= col_buf_0_val_1_0_fu_967_p3;
                col_buf_0_val_2_0_reg_1749 <= col_buf_0_val_2_0_fu_985_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not((ap_start = ap_const_logic_0)))) then
                    cols_cast_reg_1294(11 downto 0) <= cols_cast_fu_287_p1(11 downto 0);
                    rows_cast_reg_1283(11 downto 0) <= rows_cast_fu_283_p1(11 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (tmp_6_phi_fu_254_p4 = ap_const_lv1_0))) then
                heightloop_reg_1380 <= heightloop_fu_297_p2;
                    p_anchor_2_1_cast_reg_1397(0) <= p_anchor_2_1_cast_fu_324_p1(0);
                p_neg391_i_cast_reg_1390 <= p_neg391_i_cast_fu_310_p2;
                tmp_1_reg_1402 <= tmp_1_fu_328_p2;
                    tmp_2_reg_1421(13 downto 1) <= tmp_2_fu_366_p2(13 downto 1);
                tmp_3_reg_1426 <= tmp_3_fu_372_p2;
                    tmp_8_reg_1409(13 downto 1) <= tmp_8_fu_344_p2(13 downto 1);
                tmp_9_reg_1416 <= tmp_9_fu_350_p2;
                widthloop_reg_1385 <= widthloop_fu_302_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then
                i_V_reg_1434 <= i_V_fu_387_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((ap_const_lv1_0 = tmp_4_fu_382_p2)))) then
                icmp_reg_1448 <= icmp_fu_413_p2;
                p_p2_i423_i_1_reg_1497 <= p_p2_i423_i_1_fu_522_p3;
                p_p2_i423_i_2_reg_1512 <= p_p2_i423_i_2_fu_570_p3;
                p_p2_i423_i_reg_1482 <= p_p2_i423_i_fu_474_p3;
                tmp_111_1_reg_1457 <= tmp_111_1_fu_424_p2;
                tmp_111_2_reg_1461 <= tmp_111_2_fu_430_p2;
                tmp_11_reg_1439 <= tmp_11_fu_393_p2;
                tmp_12_reg_1453 <= tmp_12_fu_419_p2;
                tmp_137_1_reg_1492 <= tmp_137_1_fu_503_p2;
                tmp_137_2_reg_1507 <= tmp_137_2_fu_551_p2;
                tmp_13_reg_1465 <= tmp_13_fu_436_p2;
                tmp_16_reg_1477 <= tmp_16_fu_455_p2;
                tmp_22_reg_1472 <= tmp_15_fu_441_p2(12 downto 12);
                tmp_27_reg_1487 <= p_assign_6_1_fu_489_p2(12 downto 12);
                tmp_33_reg_1502 <= p_assign_6_2_fu_537_p2(12 downto 12);
                tmp_47_reg_1517 <= tmp_47_fu_585_p1;
                tmp_49_reg_1522 <= tmp_49_fu_589_p1;
                tmp_53_reg_1527 <= tmp_53_fu_593_p2;
                tmp_55_reg_1532 <= tmp_55_fu_599_p1;
                tmp_56_reg_1537 <= tmp_56_fu_603_p1;
                tmp_58_reg_1542 <= tmp_58_fu_607_p2;
                tmp_59_reg_1547 <= tmp_59_fu_613_p1;
                tmp_60_reg_1552 <= tmp_60_fu_617_p1;
                tmp_61_reg_1557 <= tmp_61_fu_621_p2;
                ult_reg_1443 <= ult_fu_398_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1658_pp0_it6)))) then
                isneg_reg_1791 <= p_Val2_3_fu_1203_p2(10 downto 10);
                not_i_i_i_reg_1807 <= not_i_i_i_fu_1236_p2;
                p_Val2_4_reg_1796 <= p_Val2_4_fu_1216_p1;
                tmp_2_i_i_reg_1801 <= tmp_2_i_i_fu_1230_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it2)))) then
                k_buf_0_val_3_addr_reg_1705 <= tmp_29_fu_913_p1(10 - 1 downto 0);
                k_buf_0_val_4_addr_reg_1711 <= tmp_29_fu_913_p1(10 - 1 downto 0);
                k_buf_0_val_5_addr_reg_1717 <= tmp_29_fu_913_p1(10 - 1 downto 0);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                k_buf_0_val_3_load_reg_1723 <= k_buf_0_val_3_q0;
                k_buf_0_val_4_load_reg_1736 <= k_buf_0_val_4_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1658_pp0_it7)))) then
                p_Val2_s_reg_1812 <= p_Val2_s_fu_1258_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                rev_reg_1607 <= rev_fu_723_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                right_border_buf_0_val_0_1_1_fu_162 <= right_border_buf_0_val_0_1_fu_158;
                right_border_buf_0_val_0_1_fu_158 <= col_buf_0_val_0_0_fu_949_p3;
                right_border_buf_0_val_1_1_1_fu_174 <= right_border_buf_0_val_1_1_fu_170;
                right_border_buf_0_val_1_1_fu_170 <= col_buf_0_val_1_0_fu_967_p3;
                right_border_buf_0_val_2_1_1_fu_178 <= col_buf_0_val_2_0_fu_985_p3;
                right_border_buf_0_val_2_1_fu_166 <= right_border_buf_0_val_2_1_1_fu_178;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = tmp_13_reg_1465)) and (ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4))) then
                row_assign_9_1_t_reg_1617 <= row_assign_9_1_t_fu_743_p2;
                row_assign_9_2_t_reg_1622 <= row_assign_9_2_t_fu_753_p2;
                row_assign_9_reg_1612 <= row_assign_9_fu_733_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it6) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it5)))) then
                src_kernel_win_0_val_0_1_1_fu_138 <= src_kernel_win_0_val_0_1_fu_134;
                src_kernel_win_0_val_0_1_fu_134 <= src_kernel_win_0_val_0_0_reg_1763;
                src_kernel_win_0_val_1_1_1_fu_146 <= src_kernel_win_0_val_1_1_fu_142;
                src_kernel_win_0_val_1_1_fu_142 <= src_kernel_win_0_val_1_0_reg_1769;
                src_kernel_win_0_val_2_1_1_fu_154 <= src_kernel_win_0_val_2_1_fu_150;
                src_kernel_win_0_val_2_1_fu_150 <= src_kernel_win_0_val_2_0_reg_1775;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1658_pp0_it5)))) then
                tmp25_reg_1781 <= tmp25_fu_1135_p2;
                tmp27_reg_1786 <= tmp27_fu_1141_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then
                tmp_71_reg_1757 <= p_src_data_stream_V_dout;
            end if;
        end if;
    end process;
    rows_cast_reg_1283(12) <= '0';
    cols_cast_reg_1294(12) <= '0';
    p_anchor_2_1_cast_reg_1397(12 downto 1) <= "000000000000";
    tmp_8_reg_1409(0) <= '0';
    tmp_2_reg_1421(0) <= '0';

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, tmp_6_phi_fu_254_p4, tmp_4_fu_382_p2, ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_reg_ppiten_pp0_it8, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not((ap_start = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((tmp_6_phi_fu_254_p4 = ap_const_lv1_0)) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if ((ap_const_lv1_0 = tmp_4_fu_382_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st4_fsm_3 => 
                ap_NS_fsm <= ap_ST_st5_fsm_4;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
            when ap_ST_pp0_stg0_fsm_5 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it8)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it8))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it3)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it5))))) then
                    ap_NS_fsm <= ap_ST_st16_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_5;
                end if;
            when ap_ST_st16_fsm_6 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    ImagLoc_x_cast_mux_cast_fu_857_p1 <= std_logic_vector(resize(unsigned(ImagLoc_x_cast_mux_fu_850_p3),14));
    ImagLoc_x_cast_mux_fu_850_p3 <= 
        ImagLoc_x_reg_1636 when (or_cond_i_i_fu_841_p2(0) = '1') else 
        ap_const_lv13_0;
    ImagLoc_x_fu_789_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_19_cast_fu_758_p1));
    OP1_V_0_cast_fu_1079_p1 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_1_1_fu_154),9));
    OP1_V_2_cast_fu_1118_p1 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_1_1_fu_138),9));

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0, ap_sig_cseq_ST_st3_fsm_2, tmp_4_fu_382_p2)
    begin
        if (((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_4_fu_382_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(ap_sig_cseq_ST_st3_fsm_2, tmp_4_fu_382_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and (ap_const_lv1_0 = tmp_4_fu_382_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_1130 assign process. --
    ap_sig_bdd_1130_assign_proc : process(ap_reg_ppiten_pp0_it5, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)
    begin
                ap_sig_bdd_1130 <= ((ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)));
    end process;


    -- ap_sig_bdd_1131 assign process. --
    ap_sig_bdd_1131_assign_proc : process(icmp_reg_1448, tmp_111_1_reg_1457)
    begin
                ap_sig_bdd_1131 <= ((ap_const_lv1_0 = icmp_reg_1448) and not((ap_const_lv1_0 = tmp_111_1_reg_1457)));
    end process;


    -- ap_sig_bdd_1133 assign process. --
    ap_sig_bdd_1133_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448)
    begin
                ap_sig_bdd_1133 <= (not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)));
    end process;


    -- ap_sig_bdd_1136 assign process. --
    ap_sig_bdd_1136_assign_proc : process(icmp_reg_1448, tmp_12_reg_1453)
    begin
                ap_sig_bdd_1136 <= ((ap_const_lv1_0 = icmp_reg_1448) and not((ap_const_lv1_0 = tmp_12_reg_1453)));
    end process;


    -- ap_sig_bdd_154 assign process. --
    ap_sig_bdd_154_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_154 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_182 assign process. --
    ap_sig_bdd_182_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_182 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_198 assign process. --
    ap_sig_bdd_198_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_198 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_227 assign process. --
    ap_sig_bdd_227_assign_proc : process(p_src_data_stream_V_empty_n, tmp_11_reg_1439, icmp_reg_1448, ap_reg_ppstg_tmp_20_reg_1627_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)
    begin
                ap_sig_bdd_227 <= (((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1448)) or ((p_src_data_stream_V_empty_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439))));
    end process;


    -- ap_sig_bdd_245 assign process. --
    ap_sig_bdd_245_assign_proc : process(p_dst_data_stream_V_full_n, ap_reg_ppstg_or_cond_i_reg_1658_pp0_it8)
    begin
                ap_sig_bdd_245 <= ((p_dst_data_stream_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1658_pp0_it8)));
    end process;


    -- ap_sig_bdd_25 assign process. --
    ap_sig_bdd_25_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_25 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_420 assign process. --
    ap_sig_bdd_420_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_420 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_60 assign process. --
    ap_sig_bdd_60_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_60 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_91 assign process. --
    ap_sig_bdd_91_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_91 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_5 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_5_assign_proc : process(ap_sig_bdd_198)
    begin
        if (ap_sig_bdd_198) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st16_fsm_6 assign process. --
    ap_sig_cseq_ST_st16_fsm_6_assign_proc : process(ap_sig_bdd_420)
    begin
        if (ap_sig_bdd_420) then 
            ap_sig_cseq_ST_st16_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_25)
    begin
        if (ap_sig_bdd_25) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_60)
    begin
        if (ap_sig_bdd_60) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_91)
    begin
        if (ap_sig_bdd_91) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_154)
    begin
        if (ap_sig_bdd_154) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_182)
    begin
        if (ap_sig_bdd_182) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;

    brmerge1_fu_669_p2 <= (or_cond_i422_i_fu_632_p2 or tmp_1_reg_1402);
    brmerge2_fu_687_p2 <= (or_cond_i422_i_1_fu_646_p2 or tmp_1_reg_1402);
    brmerge3_fu_705_p2 <= (or_cond_i422_i_2_fu_660_p2 or tmp_1_reg_1402);
    brmerge9_fu_845_p2 <= (or_cond_i_i_fu_841_p2 or tmp_9_reg_1416);
    brmerge_fu_887_p2 <= (rev_reg_1607 or tmp_25_reg_1646);
    col_assign_2_t_fu_905_p2 <= std_logic_vector(unsigned(tmp_3_reg_1426) - unsigned(tmp_65_fu_901_p1));
        col_assign_cast_fu_910_p1 <= std_logic_vector(resize(signed(x_reg_1693),32));

    col_buf_0_val_0_0_fu_949_p3 <= 
        k_buf_0_val_3_q0 when (ap_reg_ppstg_brmerge_reg_1686_pp0_it3(0) = '1') else 
        tmp_34_fu_938_p5;
    col_buf_0_val_1_0_fu_967_p3 <= 
        k_buf_0_val_4_q0 when (ap_reg_ppstg_brmerge_reg_1686_pp0_it3(0) = '1') else 
        tmp_35_fu_956_p5;
    col_buf_0_val_2_0_fu_985_p3 <= 
        k_buf_0_val_5_q0 when (ap_reg_ppstg_brmerge_reg_1686_pp0_it3(0) = '1') else 
        tmp_36_fu_974_p5;
    cols_cast_fu_287_p1 <= std_logic_vector(resize(unsigned(p_src_cols_V_read),13));
    heightloop_fu_297_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(rows_cast_reg_1283));
    i_V_fu_387_p2 <= std_logic_vector(unsigned(p_014_0_i_reg_261) + unsigned(ap_const_lv12_1));
    icmp1_fu_783_p2 <= "0" when (tmp_62_fu_773_p4 = ap_const_lv11_0) else "1";
    icmp_fu_413_p2 <= "0" when (tmp_18_fu_403_p4 = ap_const_lv11_0) else "1";
    isneg_fu_1208_p3 <= p_Val2_3_fu_1203_p2(10 downto 10);
    j_V_fu_767_p2 <= std_logic_vector(unsigned(p_027_0_i_reg_272) + unsigned(ap_const_lv12_1));
    k_buf_0_val_3_address0 <= tmp_29_fu_913_p1(10 - 1 downto 0);
    k_buf_0_val_3_address1 <= k_buf_0_val_3_addr_reg_1705;

    -- k_buf_0_val_3_ce0 assign process. --
    k_buf_0_val_3_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_3_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_3_ce1 assign process. --
    k_buf_0_val_3_ce1_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, tmp_111_2_reg_1461, ap_reg_ppstg_tmp_20_reg_1627_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_111_2_reg_1461))))) then 
            k_buf_0_val_3_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_3_d1 <= p_src_data_stream_V_dout;

    -- k_buf_0_val_3_we1 assign process. --
    k_buf_0_val_3_we1_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, tmp_111_2_reg_1461, ap_reg_ppstg_tmp_20_reg_1627_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = tmp_111_2_reg_1461))))) then 
            k_buf_0_val_3_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_4_address0 <= tmp_29_fu_913_p1(10 - 1 downto 0);
    k_buf_0_val_4_address1 <= ap_reg_ppstg_k_buf_0_val_4_addr_reg_1711_pp0_it4;

    -- k_buf_0_val_4_ce0 assign process. --
    k_buf_0_val_4_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_4_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_ce1 assign process. --
    k_buf_0_val_4_ce1_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, tmp_111_1_reg_1457, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)
    begin
        if ((((ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)) and not((ap_const_lv1_0 = tmp_111_1_reg_1457))) or (not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4))))) then 
            k_buf_0_val_4_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_4_d1 assign process. --
    k_buf_0_val_4_d1_assign_proc : process(k_buf_0_val_3_load_reg_1723, tmp_71_reg_1757, ap_sig_bdd_1131, ap_sig_bdd_1133, ap_sig_bdd_1130)
    begin
        if (ap_sig_bdd_1130) then
            if (ap_sig_bdd_1133) then 
                k_buf_0_val_4_d1 <= k_buf_0_val_3_load_reg_1723;
            elsif (ap_sig_bdd_1131) then 
                k_buf_0_val_4_d1 <= tmp_71_reg_1757;
            else 
                k_buf_0_val_4_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_4_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_4_we1 assign process. --
    k_buf_0_val_4_we1_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, tmp_111_1_reg_1457, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)
    begin
        if ((((ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)) and not((ap_const_lv1_0 = tmp_111_1_reg_1457))) or (not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4))))) then 
            k_buf_0_val_4_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    k_buf_0_val_5_address0 <= tmp_29_fu_913_p1(10 - 1 downto 0);
    k_buf_0_val_5_address1 <= ap_reg_ppstg_k_buf_0_val_5_addr_reg_1717_pp0_it4;

    -- k_buf_0_val_5_ce0 assign process. --
    k_buf_0_val_5_ce0_assign_proc : process(ap_reg_ppiten_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            k_buf_0_val_5_ce0 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_ce1 assign process. --
    k_buf_0_val_5_ce1_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, tmp_12_reg_1453, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)
    begin
        if (((not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4))) or ((ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)) and not((ap_const_lv1_0 = tmp_12_reg_1453))))) then 
            k_buf_0_val_5_ce1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- k_buf_0_val_5_d1 assign process. --
    k_buf_0_val_5_d1_assign_proc : process(k_buf_0_val_4_load_reg_1736, tmp_71_reg_1757, ap_sig_bdd_1133, ap_sig_bdd_1130, ap_sig_bdd_1136)
    begin
        if (ap_sig_bdd_1130) then
            if (ap_sig_bdd_1133) then 
                k_buf_0_val_5_d1 <= k_buf_0_val_4_load_reg_1736;
            elsif (ap_sig_bdd_1136) then 
                k_buf_0_val_5_d1 <= tmp_71_reg_1757;
            else 
                k_buf_0_val_5_d1 <= "XXXXXXXX";
            end if;
        else 
            k_buf_0_val_5_d1 <= "XXXXXXXX";
        end if; 
    end process;


    -- k_buf_0_val_5_we1 assign process. --
    k_buf_0_val_5_we1_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, tmp_12_reg_1453, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it5, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)
    begin
        if (((not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4))) or ((ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it5) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it4)) and not((ap_const_lv1_0 = tmp_12_reg_1453))))) then 
            k_buf_0_val_5_we1 <= ap_const_logic_1;
        else 
            k_buf_0_val_5_we1 <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_fu_1236_p2 <= "0" when (tmp_52_fu_1220_p4 = ap_const_lv3_0) else "1";
    not_tmp_s_fu_319_p2 <= "0" when (p_src_rows_V_read = ap_const_lv12_1) else "1";
    or_cond_i422_i_1_fu_646_p2 <= (tmp_137_1_reg_1492 and rev2_fu_641_p2);
    or_cond_i422_i_2_fu_660_p2 <= (tmp_137_2_reg_1507 and rev3_fu_655_p2);
    or_cond_i422_i_fu_632_p2 <= (tmp_16_reg_1477 and rev1_fu_627_p2);
    or_cond_i_fu_836_p2 <= (icmp_reg_1448 and icmp1_fu_783_p2);
    or_cond_i_i_fu_841_p2 <= (tmp_25_reg_1646 and rev4_reg_1641);
    overflow_fu_1242_p2 <= (not_i_i_i_reg_1807 and tmp_2_i_i_reg_1801);
    p_Val2_1_2_fu_1183_p3 <= (ap_reg_ppstg_src_kernel_win_0_val_1_0_reg_1769_pp0_it6 & ap_const_lv1_0);
    p_Val2_1_fu_1108_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(p_shl_cast_fu_1104_p1));
    p_Val2_2_fu_1122_p2 <= std_logic_vector(unsigned(ap_const_lv9_0) - unsigned(OP1_V_2_cast_fu_1118_p1));
    p_Val2_3_fu_1203_p2 <= std_logic_vector(unsigned(tmp25_reg_1781) + unsigned(tmp26_fu_1197_p2));
    p_Val2_4_fu_1216_p1 <= p_Val2_3_fu_1203_p2(8 - 1 downto 0);
        p_Val2_5_0_2_cast_cast_fu_1092_p1 <= std_logic_vector(resize(signed(p_Val2_5_0_2_fu_1086_p2),10));

    p_Val2_5_0_2_fu_1086_p2 <= std_logic_vector(unsigned(tmp_155_0_2_cast_fu_1083_p1) - unsigned(OP1_V_0_cast_fu_1079_p1));
    p_Val2_s_fu_1258_p3 <= 
        p_mux_i_i_cast_fu_1246_p3 when (tmp_i_i_fu_1253_p2(0) = '1') else 
        p_Val2_4_reg_1796;
    p_anchor_2_1_cast_fu_324_p1 <= std_logic_vector(resize(unsigned(not_tmp_s_fu_319_p2),13));
    p_assign_1_fu_822_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) - unsigned(tmp_19_cast_fu_758_p1));
    p_assign_2_fu_868_p2 <= std_logic_vector(unsigned(tmp_2_reg_1421) - unsigned(p_p2_i_i_cast_fu_861_p1));
    p_assign_6_1_fu_489_p2 <= std_logic_vector(signed(ap_const_lv13_1FFE) + signed(tmp_15_cast_fu_378_p1));
    p_assign_6_2_fu_537_p2 <= std_logic_vector(signed(ap_const_lv13_1FFD) + signed(tmp_15_cast_fu_378_p1));
    p_assign_7_1_fu_516_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) - unsigned(tmp_15_cast_fu_378_p1));
    p_assign_7_2_fu_564_p2 <= std_logic_vector(unsigned(ap_const_lv13_3) - unsigned(tmp_15_cast_fu_378_p1));
    p_assign_7_fu_468_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) - unsigned(tmp_15_cast_fu_378_p1));
    p_dst_data_stream_V_din <= p_Val2_s_reg_1812;

    -- p_dst_data_stream_V_write assign process. --
    p_dst_data_stream_V_write_assign_proc : process(ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_reg_ppstg_or_cond_i_reg_1658_pp0_it8, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_reg_1658_pp0_it8)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9)))))) then 
            p_dst_data_stream_V_write <= ap_const_logic_1;
        else 
            p_dst_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_mux_i_i_cast_fu_1246_p3 <= 
        ap_const_lv8_FF when (tmp_2_i_i_reg_1801(0) = '1') else 
        ap_const_lv8_0;
    p_neg391_i_cast_fu_310_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_fu_307_p1));
    p_p2_i423_i_1_fu_522_p3 <= 
        p_assign_7_1_fu_516_p2 when (tmp_30_fu_508_p3(0) = '1') else 
        p_assign_6_1_fu_489_p2;
    p_p2_i423_i_2_fu_570_p3 <= 
        p_assign_7_2_fu_564_p2 when (tmp_38_fu_556_p3(0) = '1') else 
        p_assign_6_2_fu_537_p2;
    p_p2_i423_i_fu_474_p3 <= 
        p_assign_7_fu_468_p2 when (tmp_23_fu_460_p3(0) = '1') else 
        tmp_15_fu_441_p2;
        p_p2_i_i_cast_fu_861_p1 <= std_logic_vector(resize(signed(p_p2_i_i_reg_1652),14));

    p_p2_i_i_fu_828_p3 <= 
        p_assign_1_fu_822_p2 when (tmp_64_fu_814_p3(0) = '1') else 
        ImagLoc_x_fu_789_p2;
    p_shl_cast_fu_1104_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_1096_p3),10));
    p_shl_fu_1096_p3 <= (src_kernel_win_0_val_1_1_1_fu_146 & ap_const_lv1_0);

    -- p_src_data_stream_V_read assign process. --
    p_src_data_stream_V_read_assign_proc : process(tmp_11_reg_1439, icmp_reg_1448, ap_reg_ppstg_tmp_20_reg_1627_pp0_it3, ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3, ap_sig_bdd_227, ap_reg_ppiten_pp0_it4, ap_sig_bdd_245, ap_reg_ppiten_pp0_it9)
    begin
        if (((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and (ap_const_lv1_0 = icmp_reg_1448) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))) or (not((ap_const_lv1_0 = ap_reg_ppstg_tmp_20_reg_1627_pp0_it3)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_i_i_reg_1662_pp0_it3)) and not((ap_const_lv1_0 = icmp_reg_1448)) and not((ap_const_lv1_0 = tmp_11_reg_1439)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_227 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it4)) or (ap_sig_bdd_245 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it9))))))) then 
            p_src_data_stream_V_read <= ap_const_logic_1;
        else 
            p_src_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;

    rev1_fu_627_p2 <= (tmp_22_reg_1472 xor ap_const_lv1_1);
    rev2_fu_641_p2 <= (tmp_27_reg_1487 xor ap_const_lv1_1);
    rev3_fu_655_p2 <= (tmp_33_reg_1502 xor ap_const_lv1_1);
    rev4_fu_803_p2 <= (tmp_63_fu_795_p3 xor ap_const_lv1_1);
    rev_fu_723_p2 <= (ult_reg_1443 xor ap_const_lv1_1);
    row_assign_9_1_t_fu_743_p2 <= std_logic_vector(unsigned(p_neg391_i_cast_reg_1390) - unsigned(tmp_45_fu_738_p3));
    row_assign_9_2_t_fu_753_p2 <= std_logic_vector(unsigned(p_neg391_i_cast_reg_1390) - unsigned(tmp_50_fu_748_p3));
    row_assign_9_fu_733_p2 <= std_logic_vector(unsigned(p_neg391_i_cast_reg_1390) - unsigned(tmp_40_fu_728_p3));
    rows_cast_fu_283_p1 <= std_logic_vector(resize(unsigned(p_src_rows_V_read),13));
    sel_tmp7_fu_881_p2 <= (brmerge9_fu_845_p2 xor ap_const_lv1_1);
    sel_tmp8_fu_891_p2 <= (tmp_28_reg_1671 and sel_tmp7_reg_1681);
    sel_tmp_fu_873_p3 <= 
        ImagLoc_x_cast_mux_cast_fu_857_p1 when (brmerge9_fu_845_p2(0) = '1') else 
        p_assign_2_fu_868_p2;
    src_kernel_win_0_val_0_0_fu_1036_p3 <= 
        tmp_41_fu_1028_p5 when (tmp_13_reg_1465(0) = '1') else 
        col_buf_0_val_0_0_reg_1728;
    src_kernel_win_0_val_1_0_fu_1050_p3 <= 
        tmp_46_fu_1042_p5 when (tmp_13_reg_1465(0) = '1') else 
        col_buf_0_val_1_0_reg_1741;
    src_kernel_win_0_val_2_0_fu_1064_p3 <= 
        tmp_51_fu_1056_p5 when (tmp_13_reg_1465(0) = '1') else 
        col_buf_0_val_2_0_reg_1749;
    tmp25_fu_1135_p2 <= std_logic_vector(signed(tmp_155_2_cast_fu_1128_p1) + signed(tmp_155_1_cast_fu_1114_p1));
    tmp26_fu_1197_p2 <= std_logic_vector(unsigned(tmp_155_1_cast_38_fu_1190_p1) + unsigned(tmp27_cast_fu_1194_p1));
        tmp27_cast_fu_1194_p1 <= std_logic_vector(resize(signed(tmp27_reg_1786),11));

    tmp27_fu_1141_p2 <= std_logic_vector(unsigned(tmp_155_2_2_cast_cast_fu_1132_p1) + unsigned(p_Val2_5_0_2_cast_cast_fu_1092_p1));
    tmp_111_1_fu_424_p2 <= "1" when (p_014_0_i_reg_261 = ap_const_lv12_0) else "0";
    tmp_111_2_fu_430_p2 <= "1" when (p_014_0_i_reg_261 = ap_const_lv12_1) else "0";
    tmp_11_fu_393_p2 <= "1" when (unsigned(p_014_0_i_reg_261) < unsigned(p_src_rows_V_read)) else "0";
    tmp_12_fu_419_p2 <= "1" when (p_anchor_2_1_cast_reg_1397 = tmp_15_cast_fu_378_p1) else "0";
    tmp_137_1_fu_503_p2 <= "1" when (signed(p_assign_6_1_fu_489_p2) < signed(rows_cast_reg_1283)) else "0";
    tmp_137_2_fu_551_p2 <= "1" when (signed(p_assign_6_2_fu_537_p2) < signed(rows_cast_reg_1283)) else "0";
    tmp_13_fu_436_p2 <= "1" when (unsigned(p_014_0_i_reg_261) > unsigned(p_src_rows_V_read)) else "0";
    tmp_147_1_fu_651_p2 <= "1" when (signed(p_p2_i423_i_1_reg_1497) < signed(rows_cast_reg_1283)) else "0";
    tmp_147_2_fu_665_p2 <= "1" when (signed(p_p2_i423_i_2_reg_1512) < signed(rows_cast_reg_1283)) else "0";
    tmp_149_cast_fu_340_p1 <= std_logic_vector(resize(unsigned(tmp_5_fu_333_p3),14));
    tmp_14_fu_316_p1 <= p_src_cols_V_read(2 - 1 downto 0);
    tmp_155_0_2_cast_fu_1083_p1 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_2_0_reg_1775),9));
    tmp_155_1_cast_38_fu_1190_p1 <= std_logic_vector(resize(unsigned(p_Val2_1_2_fu_1183_p3),11));
        tmp_155_1_cast_fu_1114_p1 <= std_logic_vector(resize(signed(p_Val2_1_fu_1108_p2),11));

    tmp_155_2_2_cast_cast_fu_1132_p1 <= std_logic_vector(resize(unsigned(src_kernel_win_0_val_0_0_reg_1763),10));
        tmp_155_2_cast_fu_1128_p1 <= std_logic_vector(resize(signed(p_Val2_2_fu_1122_p2),11));

    tmp_15_cast_fu_378_p1 <= std_logic_vector(resize(unsigned(p_014_0_i_reg_261),13));
    tmp_15_fu_441_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(tmp_15_cast_fu_378_p1));
    tmp_16_fu_455_p2 <= "1" when (signed(tmp_15_fu_441_p2) < signed(rows_cast_reg_1283)) else "0";
    tmp_17_fu_637_p2 <= "1" when (signed(p_p2_i423_i_reg_1482) < signed(rows_cast_reg_1283)) else "0";
    tmp_18_fu_403_p4 <= p_014_0_i_reg_261(11 downto 1);
    tmp_19_cast_fu_758_p1 <= std_logic_vector(resize(unsigned(p_027_0_i_reg_272),13));
    tmp_19_fu_674_p3 <= 
        tmp_47_reg_1517 when (or_cond_i422_i_fu_632_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_1_fu_328_p2 <= "1" when (p_src_rows_V_read = ap_const_lv12_1) else "0";
    tmp_20_fu_762_p2 <= "1" when (unsigned(tmp_19_cast_fu_758_p1) < unsigned(widthloop_reg_1385)) else "0";
    tmp_23_fu_460_p3 <= tmp_15_fu_441_p2(12 downto 12);
    tmp_24_fu_482_p1 <= tmp_8_reg_1409(2 - 1 downto 0);
    tmp_25_fu_809_p2 <= "1" when (signed(ImagLoc_x_fu_789_p2) < signed(cols_cast_reg_1294)) else "0";
    tmp_26_fu_485_p1 <= p_p2_i423_i_fu_474_p3(2 - 1 downto 0);
    tmp_28_fu_864_p2 <= "1" when (signed(p_p2_i_i_reg_1652) < signed(cols_cast_reg_1294)) else "0";
    tmp_29_cast_fu_362_p1 <= std_logic_vector(resize(unsigned(tmp_s_fu_355_p3),14));
    tmp_29_fu_913_p1 <= std_logic_vector(resize(unsigned(col_assign_cast_fu_910_p1),64));
    tmp_2_fu_366_p2 <= std_logic_vector(signed(ap_const_lv14_3FFE) + signed(tmp_29_cast_fu_362_p1));
    tmp_2_i_i_fu_1230_p2 <= (isneg_fu_1208_p3 xor ap_const_lv1_1);
    tmp_30_fu_508_p3 <= p_assign_6_1_fu_489_p2(12 downto 12);
    tmp_31_fu_530_p1 <= tmp_8_reg_1409(2 - 1 downto 0);
    tmp_32_fu_533_p1 <= p_p2_i423_i_1_fu_522_p3(2 - 1 downto 0);
    tmp_37_fu_681_p3 <= 
        tmp_49_reg_1522 when (tmp_17_fu_637_p2(0) = '1') else 
        tmp_53_reg_1527;
    tmp_38_fu_556_p3 <= p_assign_6_2_fu_537_p2(12 downto 12);
    tmp_39_fu_578_p1 <= tmp_8_reg_1409(2 - 1 downto 0);
    tmp_3_fu_372_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(tmp_14_fu_316_p1));
    tmp_40_fu_728_p3 <= 
        tmp_19_reg_1567 when (brmerge1_reg_1562(0) = '1') else 
        tmp_37_reg_1572;
    tmp_42_fu_581_p1 <= p_p2_i423_i_2_fu_570_p3(2 - 1 downto 0);
    tmp_43_fu_692_p3 <= 
        tmp_55_reg_1532 when (or_cond_i422_i_1_fu_646_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_44_fu_699_p3 <= 
        tmp_56_reg_1537 when (tmp_147_1_fu_651_p2(0) = '1') else 
        tmp_58_reg_1542;
    tmp_45_fu_738_p3 <= 
        tmp_43_reg_1582 when (brmerge2_reg_1577(0) = '1') else 
        tmp_44_reg_1587;
    tmp_47_fu_585_p1 <= tmp_15_fu_441_p2(2 - 1 downto 0);
    tmp_48_fu_710_p3 <= 
        tmp_59_reg_1547 when (or_cond_i422_i_2_fu_660_p2(0) = '1') else 
        ap_const_lv2_0;
    tmp_49_fu_589_p1 <= p_p2_i423_i_fu_474_p3(2 - 1 downto 0);
    tmp_4_fu_382_p2 <= "1" when (unsigned(tmp_15_cast_fu_378_p1) < unsigned(heightloop_reg_1380)) else "0";
    tmp_50_fu_748_p3 <= 
        tmp_48_reg_1597 when (brmerge3_reg_1592(0) = '1') else 
        tmp_54_reg_1602;
    tmp_52_fu_1220_p4 <= p_Val2_3_fu_1203_p2(10 downto 8);
    tmp_53_fu_593_p2 <= std_logic_vector(unsigned(tmp_24_fu_482_p1) - unsigned(tmp_26_fu_485_p1));
    tmp_54_fu_717_p3 <= 
        tmp_60_reg_1552 when (tmp_147_2_fu_665_p2(0) = '1') else 
        tmp_61_reg_1557;
    tmp_55_fu_599_p1 <= p_assign_6_1_fu_489_p2(2 - 1 downto 0);
    tmp_56_fu_603_p1 <= p_p2_i423_i_1_fu_522_p3(2 - 1 downto 0);
    tmp_58_fu_607_p2 <= std_logic_vector(unsigned(tmp_31_fu_530_p1) - unsigned(tmp_32_fu_533_p1));
    tmp_59_fu_613_p1 <= p_assign_6_2_fu_537_p2(2 - 1 downto 0);
    tmp_5_fu_333_p3 <= (p_src_rows_V_read & ap_const_lv1_0);
    tmp_60_fu_617_p1 <= p_p2_i423_i_2_fu_570_p3(2 - 1 downto 0);
    tmp_61_fu_621_p2 <= std_logic_vector(unsigned(tmp_39_fu_578_p1) - unsigned(tmp_42_fu_581_p1));
    tmp_62_fu_773_p4 <= p_027_0_i_reg_272(11 downto 1);
    tmp_63_fu_795_p3 <= ImagLoc_x_fu_789_p2(12 downto 12);
    tmp_64_fu_814_p3 <= ImagLoc_x_fu_789_p2(12 downto 12);
    tmp_65_fu_901_p1 <= x_fu_895_p3(2 - 1 downto 0);
    tmp_6_phi_fu_254_p4 <= tmp_6_reg_250;
    tmp_7_fu_291_p2 <= (tmp_6_reg_250 xor ap_const_lv1_1);
    tmp_8_fu_344_p2 <= std_logic_vector(unsigned(ap_const_lv14_2) + unsigned(tmp_149_cast_fu_340_p1));
    tmp_9_fu_350_p2 <= "1" when (p_src_cols_V_read = ap_const_lv12_1) else "0";
    tmp_fu_307_p1 <= p_src_rows_V_read(2 - 1 downto 0);
    tmp_i_i_fu_1253_p2 <= (isneg_reg_1791 or overflow_fu_1242_p2);
    tmp_s_fu_355_p3 <= (p_src_cols_V_read & ap_const_lv1_0);
    ult_fu_398_p2 <= "1" when (unsigned(p_014_0_i_reg_261) < unsigned(p_src_rows_V_read)) else "0";
    widthloop_fu_302_p2 <= std_logic_vector(unsigned(ap_const_lv13_2) + unsigned(cols_cast_reg_1294));
    x_fu_895_p3 <= 
        p_p2_i_i_cast_reg_1666 when (sel_tmp8_fu_891_p2(0) = '1') else 
        sel_tmp_reg_1676;
end behav;
